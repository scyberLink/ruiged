import { openDB } from 'idb';
var FileManagementMode;
(function (FileManagementMode) {
    FileManagementMode["READONLY"] = "readonly";
    FileManagementMode["READWRITE"] = "readwrite";
})(FileManagementMode || (FileManagementMode = {}));
class FileManagement {
    constructor() {
        this.upgrade = this.upgrade.bind(this);
    }
    async saveFile(fileName, fileContent, type = 'string') {
        try {
            const db = await openDB(this.DATABASE, this.DATABASE_VERSION, {
                upgrade: this.upgrade,
            });
            const tx = db.transaction(this.TABLE, FileManagementMode.READWRITE);
            const store = tx.objectStore(this.TABLE);
            store.put({ fileName, file: { type, fileContent } });
            await tx.done;
        }
        catch (error) {
            console.error('Error saving file:', error);
        }
    }
    async getFile(fileName) {
        try {
            const db = await openDB(this.DATABASE, this.DATABASE_VERSION, {
                upgrade: this.upgrade,
            });
            const tx = db.transaction(this.TABLE, FileManagementMode.READONLY);
            const store = tx.objectStore(this.TABLE);
            const { file } = (await store.get(fileName)) || { file: null };
            await tx.done;
            return file;
        }
        catch (error) {
            console.error('Error retrieving:', error);
            return null;
        }
    }
    upgrade(db) {
        if (!db.objectStoreNames.contains(this.TABLE)) {
            db.createObjectStore(this.TABLE, { keyPath: this.KEYPATH });
        }
    }
    KEYPATH = 'fileName';
    DATABASE = 'ExtensionStore';
    DATABASE_VERSION = 1;
    TABLE = 'files';
}
export default FileManagement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsZU1hbmFnZW1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tbW9uL0ZpbGVNYW5hZ2VtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZ0IsTUFBTSxFQUFFLE1BQU0sS0FBSyxDQUFBO0FBRTFDLElBQUssa0JBR0o7QUFIRCxXQUFLLGtCQUFrQjtJQUNyQiwyQ0FBcUIsQ0FBQTtJQUNyQiw2Q0FBdUIsQ0FBQTtBQUN6QixDQUFDLEVBSEksa0JBQWtCLEtBQWxCLGtCQUFrQixRQUd0QjtBQUVELE1BQU0sY0FBYztJQUNsQjtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDeEMsQ0FBQztJQUVELEtBQUssQ0FBQyxRQUFRLENBQUMsUUFBZ0IsRUFBRSxXQUEwQixFQUFFLElBQUksR0FBRyxRQUFRO1FBQzFFLElBQUk7WUFDRixNQUFNLEVBQUUsR0FBRyxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtnQkFDNUQsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO2FBQ3RCLENBQUMsQ0FBQTtZQUNGLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsQ0FBQTtZQUNuRSxNQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtZQUN4QyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsRUFBRSxDQUFDLENBQUE7WUFDcEQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFBO1NBQ2Q7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNkLE9BQU8sQ0FBQyxLQUFLLENBQUMsb0JBQW9CLEVBQUUsS0FBSyxDQUFDLENBQUE7U0FDM0M7SUFDSCxDQUFDO0lBRUQsS0FBSyxDQUFDLE9BQU8sQ0FBQyxRQUFnQjtRQUM1QixJQUFJO1lBQ0YsTUFBTSxFQUFFLEdBQUcsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7Z0JBQzVELE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTzthQUN0QixDQUFDLENBQUE7WUFDRixNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsa0JBQWtCLENBQUMsUUFBUSxDQUFDLENBQUE7WUFDbEUsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7WUFDeEMsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsTUFBTSxLQUFLLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUE7WUFDOUQsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFBO1lBQ2IsT0FBTyxJQUFJLENBQUE7U0FDWjtRQUFDLE9BQU8sS0FBSyxFQUFFO1lBQ2QsT0FBTyxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxLQUFLLENBQUMsQ0FBQTtZQUN6QyxPQUFPLElBQUksQ0FBQTtTQUNaO0lBQ0gsQ0FBQztJQUVELE9BQU8sQ0FBQyxFQUF5QjtRQUMvQixJQUFJLENBQUMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDN0MsRUFBRSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUE7U0FDNUQ7SUFDSCxDQUFDO0lBRUQsT0FBTyxHQUFHLFVBQVUsQ0FBQTtJQUNwQixRQUFRLEdBQUcsZ0JBQWdCLENBQUE7SUFDM0IsZ0JBQWdCLEdBQUcsQ0FBQyxDQUFBO0lBQ3BCLEtBQUssR0FBRyxPQUFPLENBQUE7Q0FDaEI7QUFFRCxlQUFlLGNBQWMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElEQlBEYXRhYmFzZSwgb3BlbkRCIH0gZnJvbSAnaWRiJ1xuXG5lbnVtIEZpbGVNYW5hZ2VtZW50TW9kZSB7XG4gIFJFQURPTkxZID0gJ3JlYWRvbmx5JyxcbiAgUkVBRFdSSVRFID0gJ3JlYWR3cml0ZScsXG59XG5cbmNsYXNzIEZpbGVNYW5hZ2VtZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy51cGdyYWRlID0gdGhpcy51cGdyYWRlLmJpbmQodGhpcylcbiAgfVxuXG4gIGFzeW5jIHNhdmVGaWxlKGZpbGVOYW1lOiBzdHJpbmcsIGZpbGVDb250ZW50OiBzdHJpbmcgfCBCbG9iLCB0eXBlID0gJ3N0cmluZycpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgZGIgPSBhd2FpdCBvcGVuREIodGhpcy5EQVRBQkFTRSwgdGhpcy5EQVRBQkFTRV9WRVJTSU9OLCB7XG4gICAgICAgIHVwZ3JhZGU6IHRoaXMudXBncmFkZSxcbiAgICAgIH0pXG4gICAgICBjb25zdCB0eCA9IGRiLnRyYW5zYWN0aW9uKHRoaXMuVEFCTEUsIEZpbGVNYW5hZ2VtZW50TW9kZS5SRUFEV1JJVEUpXG4gICAgICBjb25zdCBzdG9yZSA9IHR4Lm9iamVjdFN0b3JlKHRoaXMuVEFCTEUpXG4gICAgICBzdG9yZS5wdXQoeyBmaWxlTmFtZSwgZmlsZTogeyB0eXBlLCBmaWxlQ29udGVudCB9IH0pXG4gICAgICBhd2FpdCB0eC5kb25lXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNhdmluZyBmaWxlOicsIGVycm9yKVxuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdldEZpbGUoZmlsZU5hbWU6IHN0cmluZykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBkYiA9IGF3YWl0IG9wZW5EQih0aGlzLkRBVEFCQVNFLCB0aGlzLkRBVEFCQVNFX1ZFUlNJT04sIHtcbiAgICAgICAgdXBncmFkZTogdGhpcy51cGdyYWRlLFxuICAgICAgfSlcbiAgICAgIGNvbnN0IHR4ID0gZGIudHJhbnNhY3Rpb24odGhpcy5UQUJMRSwgRmlsZU1hbmFnZW1lbnRNb2RlLlJFQURPTkxZKVxuICAgICAgY29uc3Qgc3RvcmUgPSB0eC5vYmplY3RTdG9yZSh0aGlzLlRBQkxFKVxuICAgICAgY29uc3QgeyBmaWxlIH0gPSAoYXdhaXQgc3RvcmUuZ2V0KGZpbGVOYW1lKSkgfHwgeyBmaWxlOiBudWxsIH1cbiAgICAgIGF3YWl0IHR4LmRvbmVcbiAgICAgIHJldHVybiBmaWxlXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHJldHJpZXZpbmc6JywgZXJyb3IpXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfVxuXG4gIHVwZ3JhZGUoZGI6IElEQlBEYXRhYmFzZTx1bmtub3duPikge1xuICAgIGlmICghZGIub2JqZWN0U3RvcmVOYW1lcy5jb250YWlucyh0aGlzLlRBQkxFKSkge1xuICAgICAgZGIuY3JlYXRlT2JqZWN0U3RvcmUodGhpcy5UQUJMRSwgeyBrZXlQYXRoOiB0aGlzLktFWVBBVEggfSlcbiAgICB9XG4gIH1cblxuICBLRVlQQVRIID0gJ2ZpbGVOYW1lJ1xuICBEQVRBQkFTRSA9ICdFeHRlbnNpb25TdG9yZSdcbiAgREFUQUJBU0VfVkVSU0lPTiA9IDFcbiAgVEFCTEUgPSAnZmlsZXMnXG59XG5cbmV4cG9ydCBkZWZhdWx0IEZpbGVNYW5hZ2VtZW50XG4iXX0=